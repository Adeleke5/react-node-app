name: Docker Image CI

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

on: 
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Choose target environment
        options:
        - dry-run
        - Blue
        - Green
        default: dry-run
      tags:
        description: 'tags'
      

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name

  deploy-production-blue:
    runs-on: ubuntu-latest
    if: |
      (github.event.inputs.environment == 'Blue')
    needs: build
    steps:
    - name: greet
      run: |
        echo "environment is ${{ github.event.inputs.environment }} / ${{ inputs.environment }}"
        
  deploy-production-green:
    runs-on: ubuntu-latest
    if: |
      (github.event.inputs.environment == 'Green')
    needs: build
    steps:
    - name: greet
      run: |
        echo "environment is ${{ github.event.inputs.environment }} / ${{ inputs.environment }}"

  approval-gate:
    needs: deploy-production-green
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: approved
        env: 
          ENV_NAME: Production
        run: write-host "Approve for $($env.ENV_NAME)"

  update-loadbalancer:
    runs-on: ubuntu-latest
    needs:
      - deploy-production-green
      - deploy-production-blue
    steps:
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: my-image-name
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        output: 'trivy-results.table'

    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: master
        base: master
        extra_args: --debug --only-verified

    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.10.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        target: 'https://www.nairaland.com'
        cmd_options: '-a'
        fail_action: false

    # - name: Upload Trivy scan results to Github Security table
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: 'trivy-results.json'
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: scan-report
        path: trivy-results.table
        retention-days: 5
    
